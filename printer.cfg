# This file contains common pin mappings for RAMPS (v1.3 and later)
# boards. RAMPS boards typically use a firmware compiled for the AVR
# atmega2560 (though the atmega1280 is also possible).

# See docs/Config_Reference.md for a description of parameters.

#------ GENERAL -------
[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0

[printer]
kinematics: corexy
max_velocity: 200
max_accel: 10000
max_accel_to_decel: 10000
max_z_velocity: 5
max_z_accel: 100
square_corner_velocity: 5
#------ GENERAL END -------
[skew_correction]
#------ STEPPER X -------
[stepper_x]
step_pin: PF0
dir_pin: !PF1
enable_pin: !PD7
microsteps: 16
rotation_distance: 40
endstop_pin: ^!PE5
#endstop_pin: ^PE4
position_endstop: 0
position_max: 400
homing_speed: 100

[tmc2209 stepper_x]
uart_pin: PK1
tx_pin: PG1
run_current: 0.8
hold_current: 0.4
#interpolate: true
#------ STEPPER X END -------

#------ STEPPER Y -------
[stepper_y]
step_pin: PF6
dir_pin: PF7
enable_pin: !PF2
microsteps: 16
rotation_distance: 40
#endstop_pin: ^PJ1
endstop_pin: ^!PJ0
position_endstop: 200
position_max: 200
homing_speed: 100

[tmc2209 stepper_y]
uart_pin: PK2
tx_pin: PF5
run_current: 0.8
hold_current: 0.4
#interpolate: true
#------ STEPPER Y END -------

#------ STEPPER Z -------
[stepper_z]
step_pin: PL3
dir_pin: PL1
enable_pin: !PK0
microsteps: 16
rotation_distance: 1.25
#endstop_pin: ^PD3
#endstop_pin: ^PD2
endstop_pin: probe:z_virtual_endstop
#position_endstop: 0.5
position_max: 700
position_min: -10

[tmc2209 stepper_z]
uart_pin: PK3
tx_pin: PL7
run_current: 2
hold_current: 0.6
interpolate: false
#------ STEPPER Z END -------

#------ EXTRUDER -------

[extruder]
step_pin: PA4
dir_pin: !PA6
enable_pin: !PA2
microsteps: 16
full_steps_per_rotation: 200
#gear_ratio: 50:17
rotation_distance: 4.637 #bmg 24.384
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PB4
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PK5
pressure_advance: 0.183 #0.175 #petg 0.1250.214
min_temp: 0
max_temp: 260
max_extrude_only_distance: 500

[tmc2209 extruder]
uart_pin:PK4
tx_pin: PL5
run_current: 0.85
hold_current: 0.100
interpolate: true
#------ EXTRUDER END -------

#------ PROBE & HOMING & ABL -------
[probe]
pin: ^!PD3
x_offset: -1
y_offset: -47
z_offset: 1.0
speed: 5

[safe_z_home]
home_xy_position: 200, 100
move_to_previous: False

[bed_mesh]
speed: 120
horizontal_move_z: 5
mesh_min: 5, 0
mesh_max: 385, 150
algorithm: bicubic
probe_count: 20, 10
#------ PROBE & HOMING & ABL END -------

#------ COLING & HEATING -------
[fan]
pin: PH6

[heater_bed]
heater_pin: PH5
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PK6
control: pid
pid_Kp: 52.48
pid_Ki: 6.22
pid_Kd: 295.2
min_temp: 0
max_temp: 130
#------ COLING & HEATING END -------

#------ INPUT SHAPING -------
[input_shaper]
#shaper_freq_x: 75  # frequency for the X mark of the test model 75
#shaper_freq_y: 98  # frequency for the Y mark of the test model 98
shaper_type: mzv

[mcu adxl]
#serial: /dev/serial/by-id/xxx
serial: /dev/serial/by-id/usb-Klipper_rp2040_12345-if00
# Edit the above line with the correct serial address. Use "ls /dev/serial/by-id/*" to find the MCU serial address.
#serial: /dev/ttyACM0

[adxl345]
cs_pin: adxl:gpio9
spi_software_sclk_pin: adxl:gpio10
spi_software_mosi_pin: adxl:gpio11
spi_software_miso_pin: adxl:gpio12

[resonance_tester]
accel_chip: adxl345
#accel_per_hz: 70
probe_points:
    200,100,10

[gcode_macro INPUTSHAPER_X]
gcode:
  M84
  G90
  G28
  SHAPER_CALIBRATE AXIS=x
  SAVE_CONFIG 

[gcode_macro INPUTSHAPER_Y]
gcode:
  M84
  G90
  G28
  SHAPER_CALIBRATE AXIS=y
  SAVE_CONFIG 
#------ INPUT SHAPING END -------

#------ OTHER & MACROS -------
[force_move]
enable_force_move:true

[gcode_macro probe_mesh]
gcode:
       # Set extruder and bed temperature
       M109 S140
       M190 S75
       # Home all axis
       G28
       # Start probing
       BED_MESH_CALIBRATE PROFILE=mesh1 METHOD=automatic
       # Turn off heaters afterward
       TURN_OFF_HEATERS
       
[gcode_macro START_PRINT]
gcode:
       BED_MESH_PROFILE LOAD=mesh1
#       SKEW_PROFILE LOAD=skew_profile
#------ OTHER & MACROS -------

# Cancel object (aka Marlin/RRF M486 commands) support
#
# Enable object exclusion
[exclude_object]

[gcode_macro M486]
gcode:
  # Parameters known to M486 are as follows:
  #   [C<flag>] Cancel the current object
  #   [P<index>] Cancel the object with the given index
  #   [S<index>] Set the index of the current object.
  #       If the object with the given index has been canceled, this will cause
  #       the firmware to skip to the next object. The value -1 is used to
  #       indicate something that isn’t an object and shouldn’t be skipped.
  #   [T<count>] Reset the state and set the number of objects
  #   [U<index>] Un-cancel the object with the given index. This command will be
  #       ignored if the object has already been skipped

  {% if 'exclude_object' not in printer %}
    {action_raise_error("[exclude_object] is not enabled")}
  {% endif %}

  {% if 'T' in params %}
    EXCLUDE_OBJECT RESET=1

    {% for i in range(params.T | int) %}
      EXCLUDE_OBJECT_DEFINE NAME={i}
    {% endfor %}
  {% endif %}

  {% if 'C' in params %}
    EXCLUDE_OBJECT CURRENT=1
  {% endif %}

  {% if 'P' in params %}
    EXCLUDE_OBJECT NAME={params.P}
  {% endif %}

  {% if 'S' in params %}
    {% if params.S == '-1' %}
      {% if printer.exclude_object.current_object %}
        EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
      {% endif %}
    {% else %}
      EXCLUDE_OBJECT_START NAME={params.S}
    {% endif %}
  {% endif %}

  {% if 'U' in params %}
    EXCLUDE_OBJECT RESET=1 NAME={params.U}
  {% endif %}

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 32.586
#*# pid_ki = 2.311
#*# pid_kd = 114.865
#*#
#*# [bed_mesh mesh1]
#*# version = 1
#*# points =
#*# 	-1.580078, -1.403906, -1.241797, -1.051172, -0.879297, -0.679688, -0.537891, -0.396094, -0.339453, -0.306641, -0.305469, -0.291406, -0.339063, -0.420313, -0.545313, -0.657813, -0.807031, -0.917578, -1.051563, -1.161719
#*# 	-1.507813, -1.348047, -1.161328, -0.973828, -0.758203, -0.571484, -0.416797, -0.316797, -0.226953, -0.228516, -0.218359, -0.227734, -0.245703, -0.336719, -0.448438, -0.581641, -0.719531, -0.857031, -0.968359, -1.123047
#*# 	-1.430078, -1.275391, -1.083984, -0.878906, -0.674609, -0.481641, -0.353125, -0.227344, -0.167578, -0.149219, -0.155859, -0.154688, -0.192578, -0.267578, -0.391016, -0.519141, -0.668750, -0.790234, -0.922656, -1.045313
#*# 	-1.355469, -1.210938, -1.004688, -0.778906, -0.582422, -0.387500, -0.240234, -0.124609, -0.062891, -0.061719, -0.064844, -0.064063, -0.112109, -0.196875, -0.329688, -0.459375, -0.591406, -0.730859, -0.863281, -0.992188
#*# 	-1.286719, -1.161328, -0.934766, -0.717188, -0.507422, -0.355078, -0.216016, -0.104297, -0.027344, -0.035938, -0.024609, -0.052344, -0.079297, -0.173047, -0.281250, -0.433203, -0.555859, -0.705469, -0.834375, -0.967188
#*# 	-1.267578, -1.101563, -0.914063, -0.644922, -0.460547, -0.273438, -0.148438, -0.021484, 0.022656, 0.054687, 0.018359, 0.038281, -0.040625, -0.111328, -0.252734, -0.366406, -0.527344, -0.647656, -0.822266, -0.923438
#*# 	-1.213672, -1.079688, -0.823828, -0.635547, -0.411328, -0.263672, -0.111719, -0.022266, 0.063281, 0.047656, 0.058203, 0.017187, 0.005469, -0.118359, -0.227734, -0.388281, -0.510938, -0.675000, -0.787891, -0.932422
#*# 	-1.245313, -1.044922, -0.839063, -0.583594, -0.402344, -0.221484, -0.100391, 0.025391, 0.061328, 0.064453, 0.019531, 0.017969, -0.046484, -0.120313, -0.252734, -0.380469, -0.540625, -0.667188, -0.828516, -0.926953
#*# 	-1.264844, -1.066797, -0.837109, -0.624609, -0.416797, -0.257422, -0.107422, -0.009766, 0.039062, 0.040234, 0.014062, -0.005859, -0.053516, -0.165625, -0.276563, -0.410156, -0.556641, -0.707031, -0.829688, -0.978125
#*# 	-1.276953, -1.054688, -0.831250, -0.618359, -0.408594, -0.259766, -0.115625, -0.016016, 0.061328, 0.047266, -0.003125, -0.032813, -0.077344, -0.167188, -0.297656, -0.446875, -0.591406, -0.728125, -0.860547, -1.011328
#*# tension = 0.2
#*# min_x = 5.0
#*# algo = bicubic
#*# y_count = 10
#*# mesh_y_pps = 2
#*# min_y = 0.0
#*# x_count = 20
#*# max_y = 149.94
#*# mesh_x_pps = 2
#*# max_x = 385.0
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 49.0
#*# shaper_type_y = zv
#*# shaper_freq_y = 108.6
